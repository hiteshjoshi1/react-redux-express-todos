pool:
  vmImage: "Ubuntu 16.04"

trigger:
  - azure

variables:
  projectName: todos
  imageName: "$(projectName)"
  registryServerName: "$(registryName).azurecr.io"
  # define 3 more variables: registryName, registryLogin and registryPassword in the build pipeline in UI

steps:
  - bash: pwd && ls
    displayName: "Folder check"

  - bash: docker build -f $(system.defaultWorkingDirectory)/dockerfile -t $(registryServerName)/$(imageName):$(build.buildId) -t $(registryServerName)/$(imageName):latest $(system.defaultWorkingDirectory)/
    displayName: "docker build"

  - bash: docker login $(registryServerName) -u $(registryLogin) -p $(registryPassword)
    displayName: "docker login"
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/azure'))

  - bash: |
      docker push $(registryServerName)/$(imageName):$(build.buildId)
      docker push $(registryServerName)/$(imageName):latest
    displayName: "docker push"
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/azure'))

  - task: HelmInstaller@0
    displayName: "Install Helm"
    inputs:
      helmVersion: 2.13.0

  - bash: helm package --version $(build.buildId) --destination $(build.artifactStagingDirectory) $(system.defaultWorkingDirectory)/charts/$(projectName)
    displayName: "helm package"

  - bash: az acr helm push -n $(registryName) -u $(registryLogin) -p $(registryPassword) $(build.artifactStagingDirectory)-$(build.buildId).tgz
    displayName: "az acr helm push"
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/azure'))
